@page "/"
@page "/home"
@using Humanizer
@using MemeChat.Database.Interfaces
@using MemeChat.ViewModel


<MudAppBar Elevation="1" Fixed="true" Dense="true">
    <MudText Align="Align.Left" Typo="Typo.h5" Class="user-select-none">MemeChat</MudText>
    <MudSpacer />
    <MudIconButton Icon="@Icons.Filled.Logout" Color="Color.Inherit" OnClick="LogOut" />
    <MudIconButton Icon="@Icons.Filled.PersonAddAlt1" Color="Color.Inherit" OnClick="AddNewContact" />
    <MudIconButton Icon="@Icons.Filled.Settings" Color="Color.Inherit" Link="account" />
</MudAppBar>

<MudMainContent>
    <MudContainer MaxWidth="MaxWidth.Large">
        <MudTextField @bind-Value="@IndexViewModel.SearchName"
                      Placeholder="Search..."
                      AdornmentIcon="@Icons.Filled.Search"
                      Adornment="Adornment.End"
                      DebounceInterval="250" />

        <div class="my-3"></div>

        @if (IndexViewModel?.Users == null || !IndexViewModel.Users.Any())
        {
            <MudText Align="Align.Center" Typo="Typo.subtitle2" Class="px-3">
                No contacts yet! Add some via the plus icon in the upper left corner.
            </MudText>
        }
        else
        {
            foreach (var user in IndexViewModel.Users)
            {
                <div @onclick="@(() => IndexViewModel.NavigateToChat(user.Nickname))">
                    <MudStack Row="true">
                        <MudAvatar Image="@user.Avatar" />
                        <div>
                            <MudText Typo="Typo.subtitle2">@user.Name</MudText>
                            <MudText Typo="Typo.body2">@IndexViewModel.Chats[user.Nickname]?.Messages?.Last()?.SendAt.Humanize()</MudText>
                        </div>
                    </MudStack>
                </div>
            }
        }
    </MudContainer>
</MudMainContent>

<NewContactDialog IsVisible="@isDialogVisible"
                  DoesUserExist="@(nk => IndexViewModel.DoesUserWithNicknameExist(nk))"
                  OnNewContact="@(nk => IndexViewModel.NavigateToChat(nk))" />

@code {
    [Inject] private IDialogService DialogService { get; set; }
    [Inject] public NavigationManager NavigationManager { get; set; }
    [Inject] public IndexViewModel IndexViewModel { get; set; }

    private bool isDialogVisible;

    protected override async Task OnInitializedAsync()
    {
        await IndexViewModel.LoadData();
    }

    private async Task LogOut()
    {
        bool? logOut = await DialogService.ShowMessageBox("Log Out", @"Do you really want to log out?", "OK", "Cancel");

        if (logOut != null && logOut.Value)
        {
            await SecureStorage.Default.SetAsync(Constants.SecureStorage_Nickname, " ");
            NavigationManager.NavigateTo("start");
        }
    }

    private void AddNewContact()
    {
        isDialogVisible = true;
    }
}